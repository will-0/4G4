{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sweep graphs\n",
    "Revive the babies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import geopandas as gpd\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import seaborn as sb\n",
    "\n",
    "# set font sizes\n",
    "import matplotlib \n",
    "SMALL_SIZE = 14\n",
    "matplotlib.rc('font', size=SMALL_SIZE)\n",
    "matplotlib.rc('axes', titlesize=SMALL_SIZE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_data(sweep_name, x_label, y_label, z_label = \"val_loss\"):\n",
    "#def get_data(sweep_name, x_label, y_label, z_label):\n",
    "    'Extracts relevant data from the sweep'\n",
    "    \n",
    "    pso_df = pd.read_csv(\"sweep_data/\"+sweep_name+\".csv\")\n",
    "\n",
    "    x = pso_df[[x_label]]\n",
    "    y = pso_df[[y_label]]\n",
    "    z = pso_df[[z_label]]\n",
    "    \n",
    "    return x, y, z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ax = canada.plot(column='Partying', cmap='viridis', vmin=vmin, vmax=vmax,\n",
    "     missing_kwds= dict(color = \"lightgrey\",) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_heatmap(z, x_range, y_range, clip_min = 0, clip_max = 1, square = True, grid_space = 6, cmap_lims = (0, 1)):\n",
    "    'Plots a heatmap with the data'\n",
    "    \n",
    "    temp = np.array(z, dtype = 'float')\n",
    "    # I changed nan from nan=0.0 to nan=100 so that non convergent ones look bad instead of good\n",
    "    # Even better would be to make them grey and add a label\n",
    "    #temp = np.nan_to_num(temp, nan=100, posinf=100, neginf=100)\n",
    "    temp = np.clip(temp, clip_min, clip_max)\n",
    "    \n",
    "    z_array = np.fliplr(temp.reshape((x_range[2], y_range[2])))\n",
    "    \n",
    "    #Choose colours for heat map\n",
    "    cmap = plt.get_cmap('bwr')\n",
    "    #cmap.set_label('val_loss', rotation=270)\n",
    "\n",
    "\n",
    "#     cmap.set_under(color = 'r', alpha = 0.1)\n",
    "\n",
    "    heat_map = sb.heatmap(z_array.T, xticklabels=True, yticklabels=True, square = square, \n",
    "                          cmap=cmap, vmin=cmap_lims[0], vmax=cmap_lims[1], missing_kwds= dict(color = \"lightgrey\",))  # set the colour limits here\n",
    "    \n",
    "    # Set x ticks\n",
    "    plt.xticks(ticks = np.linspace(0, x_range[2]-1, grid_space)+0.5, rotation=0)\n",
    "    \n",
    "    # Set x ticks labels\n",
    "    heat_map.set_xticklabels(np.round(np.linspace(x_range[0], x_range[1], grid_space), 1))\n",
    "    \n",
    "    # Set y ticks\n",
    "    plt.yticks(ticks = np.linspace(0, y_range[2]-1, grid_space)+0.5, rotation=0)\n",
    "    \n",
    "    # Set y ticks labels\n",
    "    heat_map.set_yticklabels(np.flip(np.round(np.linspace(y_range[0], y_range[1], grid_space), 1)))\n",
    "    \n",
    "    plt.xlabel(x_range[3])\n",
    "    plt.ylabel(y_range[3])\n",
    "    \n",
    "#     plt.xlim(1) # set the x limits here\n",
    "    plt.show()\n",
    "\n",
    "    \n",
    "    return z_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'QuadMesh' object has no property 'missing_kwds'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-54-a98b4fefd11e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pso_16'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"c_1\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"c_2\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mplot_heatmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mz\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_range\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m21\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"$c_1$\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_range\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m21\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"$c_2$\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcmap_lims\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-53-8d477a6a61e9>\u001b[0m in \u001b[0;36mplot_heatmap\u001b[0;34m(z, x_range, y_range, clip_min, clip_max, square, grid_space, cmap_lims)\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m     heat_map = sb.heatmap(z_array.T, xticklabels=True, yticklabels=True, square = square, \n\u001b[0;32m---> 20\u001b[0;31m                           cmap=cmap, vmin=cmap_lims[0], vmax=cmap_lims[1], missing_kwds= dict(color = \"lightgrey\",))  # set the colour limits here\n\u001b[0m\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m     \u001b[0;31m# Set x ticks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/seaborn/matrix.py\u001b[0m in \u001b[0;36mheatmap\u001b[0;34m(data, vmin, vmax, cmap, center, robust, annot, fmt, annot_kws, linewidths, linecolor, cbar, cbar_kws, cbar_ax, square, xticklabels, yticklabels, mask, ax, **kwargs)\u001b[0m\n\u001b[1;32m    526\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0msquare\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    527\u001b[0m         \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_aspect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"equal\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 528\u001b[0;31m     \u001b[0mplotter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcbar_ax\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    529\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    530\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/seaborn/matrix.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, ax, cax, kws)\u001b[0m\n\u001b[1;32m    282\u001b[0m         \u001b[0;31m# Draw the heatmap\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    283\u001b[0m         mesh = ax.pcolormesh(self.plot_data, vmin=self.vmin, vmax=self.vmax,\n\u001b[0;32m--> 284\u001b[0;31m                              cmap=self.cmap, **kws)\n\u001b[0m\u001b[1;32m    285\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    286\u001b[0m         \u001b[0;31m# Set the axis limits\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1599\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minner\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1600\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1601\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msanitize_sequence\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1602\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1603\u001b[0m         \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_sig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mpcolormesh\u001b[0;34m(self, alpha, norm, cmap, vmin, vmax, shading, antialiased, *args, **kwargs)\u001b[0m\n\u001b[1;32m   6169\u001b[0m         collection = mcoll.QuadMesh(Nx - 1, Ny - 1, coords,\n\u001b[1;32m   6170\u001b[0m                                     \u001b[0mantialiased\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mantialiased\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshading\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshading\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6171\u001b[0;31m                                     **kwargs)\n\u001b[0m\u001b[1;32m   6172\u001b[0m         \u001b[0mcollection\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_alpha\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6173\u001b[0m         \u001b[0mcollection\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mC\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, meshWidth, meshHeight, coordinates, antialiased, shading, **kwargs)\u001b[0m\n\u001b[1;32m   1910\u001b[0m     def __init__(self, meshWidth, meshHeight, coordinates,\n\u001b[1;32m   1911\u001b[0m                  antialiased=True, shading='flat', **kwargs):\n\u001b[0;32m-> 1912\u001b[0;31m         \u001b[0mCollection\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1913\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_meshWidth\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmeshWidth\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1914\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_meshHeight\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmeshHeight\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, edgecolors, facecolors, linewidths, linestyles, capstyle, joinstyle, antialiaseds, offsets, transOffset, norm, cmap, pickradius, hatch, urls, offset_position, zorder, **kwargs)\u001b[0m\n\u001b[1;32m    160\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    161\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_path_effects\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 162\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    163\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_paths\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    164\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, props)\u001b[0m\n\u001b[1;32m    972\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    973\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setattr_cm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meventson\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 974\u001b[0;31m             \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_update_property\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mprops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    975\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    976\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    972\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    973\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setattr_cm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meventson\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 974\u001b[0;31m             \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_update_property\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mprops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    975\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    976\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_update_property\u001b[0;34m(self, k, v)\u001b[0m\n\u001b[1;32m    968\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    969\u001b[0m                     raise AttributeError('{!r} object has no property {!r}'\n\u001b[0;32m--> 970\u001b[0;31m                                          .format(type(self).__name__, k))\n\u001b[0m\u001b[1;32m    971\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    972\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'QuadMesh' object has no property 'missing_kwds'"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y, z = get_data('pso_16', \"c_1\", \"c_2\")\n",
    "\n",
    "plot_heatmap(z, x_range = (0, 5, 21, \"$c_1$\"), y_range = (0, 5, 21, \"$c_2$\"), cmap_lims = (0, 0.5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[0.09885576, 0.07683102, 0.16006999, 0.09663942, 0.15782898,\n",
       "        0.16417529, 0.10511485, 0.1189754 , 0.10765635, 0.14853507,\n",
       "        0.09955927],\n",
       "       [0.12918897, 0.11625064, 0.15005634, 0.10318551, 0.10706988,\n",
       "        0.08420939, 0.11473347, 0.11313901, 0.1348248 , 0.15036603,\n",
       "        0.11176002],\n",
       "       [0.12300447, 0.15578422, 0.13464634, 0.14890178, 0.0924053 ,\n",
       "        0.15958845, 0.09561145, 0.14721215, 0.11117489, 0.14664693,\n",
       "        0.17220305],\n",
       "       [0.17336598, 0.1060809 , 0.13393258, 0.14805727, 0.12847415,\n",
       "        0.13920709, 0.13776514, 0.14264222, 0.14303811, 0.0944128 ,\n",
       "        0.1631457 ],\n",
       "       [0.09978662, 0.1205752 , 0.1532205 , 0.12607162, 0.09155401,\n",
       "        0.13293108, 0.12882305, 0.13277124, 0.15060377, 0.11171948,\n",
       "        0.12994367],\n",
       "       [0.08915258, 0.15653202, 0.16486984, 0.15566943, 0.14173649,\n",
       "        0.15589487, 0.11146621, 0.20521904, 0.15486565, 0.11730319,\n",
       "        0.16155058],\n",
       "       [0.1003656 , 0.09754771, 0.10641409, 0.13335494, 0.10345828,\n",
       "        0.18011908, 0.11012076, 0.10634172, 0.1051139 , 0.12826824,\n",
       "        0.0938864 ],\n",
       "       [0.12226326, 0.16954301, 0.16364902, 0.12554741, 0.12021821,\n",
       "        0.17018422, 0.1218111 , 0.11416829, 0.09272834, 0.09491517,\n",
       "        0.08376114],\n",
       "       [0.14076346, 0.13912817, 0.11187682, 0.12841033, 0.11419283,\n",
       "        0.15658844, 0.13657711, 0.11181111, 0.13723843, 0.14409491,\n",
       "        0.15754964],\n",
       "       [0.1189182 , 0.15103726, 0.1198111 , 0.18163514, 0.13065269,\n",
       "        0.19097641, 0.14866227, 0.12000959, 0.19266445, 0.1399695 ,\n",
       "        0.14166379],\n",
       "       [0.12224504, 0.17135755, 0.18923529, 0.09660699, 0.11258112,\n",
       "        0.12495053, 0.10296052, 0.12508602, 0.15931417, 0.14028794,\n",
       "        0.12536301],\n",
       "       [0.15514642, 0.07162675, 0.11015607, 0.10238418, 0.09379315,\n",
       "        0.16815773, 0.20227194, 0.14799223, 0.12587169, 0.12934406,\n",
       "        0.09959542],\n",
       "       [0.15181202, 0.09588433, 0.11210864, 0.12034805, 0.11069526,\n",
       "        0.14372097, 0.11236434, 0.14395874, 0.0896967 , 0.14314773,\n",
       "        0.1484273 ],\n",
       "       [0.17907947, 0.11101072, 0.11461468, 0.12402777, 0.12333569,\n",
       "        0.1389274 , 0.11141475, 0.16277127, 0.17866614, 0.20806234,\n",
       "        0.10582337],\n",
       "       [0.15816785, 0.12195036, 0.15710756, 0.13841872, 0.09816688,\n",
       "        0.06737311, 0.11248225, 0.13796884, 0.14940566, 0.12120504,\n",
       "        0.14192529],\n",
       "       [0.13894851, 0.13466909, 0.15457922, 0.10196982, 0.16379413,\n",
       "        0.12581733, 0.13151497, 0.1204709 , 0.10103129, 0.15234991,\n",
       "        0.16711987],\n",
       "       [0.15025823, 1.        , 0.19118908, 0.1260395 , 0.15244084,\n",
       "        0.13127596, 0.10854484, 0.11827661, 0.16030367, 0.15095259,\n",
       "        0.11365794],\n",
       "       [0.12167221, 0.09080129, 0.12040744, 0.13605654, 0.16665518,\n",
       "        0.13518435, 0.10963401, 0.13938701, 1.        , 1.        ,\n",
       "        0.14704779],\n",
       "       [0.14250856, 0.12179073, 0.14080106, 0.09929007, 0.13916985,\n",
       "        0.11155447, 0.13698603, 0.11931996, 0.16952369, 0.18720209,\n",
       "        0.11352102],\n",
       "       [0.13706843, 0.09146412, 0.16583141, 0.14342363, 0.14611376,\n",
       "        0.17233294, 0.12122855, 0.11949446, 0.18689706, 0.19656513,\n",
       "        0.13193284],\n",
       "       [0.1304332 , 0.10268838, 0.15969435, 0.11251116, 0.13632113,\n",
       "        0.17866684, 0.13160755, 0.15290071, 0.15506255, 0.16608306,\n",
       "        0.11793785],\n",
       "       [0.23670094, 0.09854368, 0.167404  , 0.1222178 , 0.16093198,\n",
       "        0.12933446, 0.16740909, 0.12872476, 0.1252406 , 0.1277134 ,\n",
       "        0.15460393],\n",
       "       [0.14486889, 0.09735378, 0.15342606, 0.18465568, 0.11153352,\n",
       "        0.14310896, 0.14475416, 0.17194483, 0.11060842, 0.08681509,\n",
       "        0.16885614],\n",
       "       [0.13932002, 0.11037631, 0.15677321, 0.1256102 , 0.09342524,\n",
       "        0.1076267 , 0.17344103, 0.13260822, 0.13156465, 0.18565149,\n",
       "        0.12088765],\n",
       "       [0.16414227, 0.11558082, 0.11047595, 0.20167335, 0.12073027,\n",
       "        0.16345326, 0.12885488, 0.15446045, 0.1121543 , 0.13529467,\n",
       "        0.17159505],\n",
       "       [0.12997321, 0.13625687, 0.18781361, 0.07341931, 0.18953148,\n",
       "        0.17610303, 0.10036643, 0.21270654, 0.17737155, 0.13529288,\n",
       "        0.18409303],\n",
       "       [0.15352576, 0.08303362, 0.13173181, 0.11764553, 0.14333172,\n",
       "        0.17846069, 0.12648442, 0.19954231, 0.12357814, 0.14293035,\n",
       "        0.17178081],\n",
       "       [0.26577361, 0.1211573 , 0.14939037, 0.14299413, 0.18127349,\n",
       "        0.14537206, 0.20188646, 0.15471409, 0.15935922, 0.1417003 ,\n",
       "        0.11978953],\n",
       "       [0.10532207, 0.14079391, 0.1792236 , 0.14635027, 0.14591837,\n",
       "        0.11684764, 0.12635815, 0.15225821, 0.15086952, 0.14382715,\n",
       "        0.11377062],\n",
       "       [0.16031442, 0.12004225, 0.12779591, 0.12475479, 0.14231284,\n",
       "        0.14261228, 0.14081837, 0.11236669, 0.22666342, 0.16718453,\n",
       "        0.15906061],\n",
       "       [0.14447501, 0.14800281, 0.12211082, 0.15224649, 0.12781269,\n",
       "        0.15247941, 0.20566623, 0.13459933, 0.20632536, 0.15843313,\n",
       "        0.15553675]])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x, y, z = get_data('pso_17', \"num_particles\", \"num_per_layer\")\n",
    "# print(x, y, z)\n",
    "\n",
    "plot_heatmap(z, x_range = (60, 100, 31, \"num_particles\"), y_range = (10, 20, 11, \"num_per_layer\"), square = False, cmap_lims = (0, 0.3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[1.        , 0.5150085 , 1.        , 0.24690081, 0.23303328,\n",
       "        0.17901121, 0.28086599, 0.34338993, 0.18161623, 0.16041351,\n",
       "        0.32555591, 0.14325963, 0.27082344, 0.15434844, 0.25145896,\n",
       "        0.21762736, 0.22224194, 0.21121446, 0.19393394, 0.19110657,\n",
       "        0.14319941, 0.21801015, 0.21959165, 0.18198094, 0.19605167,\n",
       "        0.23228587, 0.21070026, 0.22943687, 0.23084351, 0.18043627,\n",
       "        0.1898909 , 0.19084662, 0.17098241, 0.18644555, 0.19396288,\n",
       "        0.22896971, 0.16348821, 0.1856381 , 0.17555752, 0.16982398,\n",
       "        0.21440659, 0.20417005, 0.1976643 , 0.21604405, 0.10668261,\n",
       "        0.1882947 , 0.15873383, 0.22997094, 0.13411802, 0.20779802,\n",
       "        0.21117241, 0.18073511, 0.18124726, 0.18056139, 0.14465362,\n",
       "        0.20460096, 0.22453918, 0.15418244, 0.19183948, 0.15660984,\n",
       "        0.16996267, 0.19499456, 0.16885137, 0.14659288, 0.2186364 ,\n",
       "        0.19124251, 0.2095707 , 0.22605266, 0.17369321, 0.19241852,\n",
       "        0.19526493, 0.18767084, 0.1446403 , 0.1792051 , 0.20187237,\n",
       "        0.18011522, 0.16502283, 0.16082825, 0.18967633, 0.19910779,\n",
       "        0.21498361, 0.21264164, 0.14598457, 0.22287808, 0.21881398,\n",
       "        0.24448757, 0.14860608, 0.21759107, 0.19760782, 0.18592974,\n",
       "        0.16004224, 0.1798486 , 0.23312296, 0.22825132, 0.1949278 ,\n",
       "        0.19008811, 0.16846336, 0.18053738, 0.18746001, 0.20306878],\n",
       "       [1.        , 0.77025101, 0.61122888, 0.28702515, 0.25676454,\n",
       "        0.29134672, 0.25382162, 0.19363924, 0.23477648, 0.21829879,\n",
       "        0.2742473 , 0.20442105, 0.24278984, 0.22081245, 0.20140275,\n",
       "        0.18889577, 0.20564071, 0.20723004, 0.23083969, 0.15049113,\n",
       "        0.23379866, 0.23437011, 0.2347926 , 0.23381391, 0.14214116,\n",
       "        0.21803214, 0.1553679 , 0.19655501, 0.19093657, 0.21612682,\n",
       "        0.20129793, 0.16192264, 0.17226544, 0.12740746, 0.13068719,\n",
       "        0.18152142, 0.15871428, 0.17594979, 0.13066783, 1.        ,\n",
       "        1.        , 0.1799815 , 0.21222466, 0.12485364, 0.19934832,\n",
       "        0.22452279, 0.17631242, 0.13158789, 1.        , 0.19437168,\n",
       "        0.16015793, 0.18782353, 0.16525925, 0.17842552, 0.15865019,\n",
       "        0.1707012 , 0.10683098, 0.17427984, 0.20522983, 0.16868911,\n",
       "        0.1529486 , 0.16782711, 0.14153729, 0.14807956, 0.15417489,\n",
       "        0.17805288, 0.09390408, 0.2000814 , 0.13057178, 0.17825416,\n",
       "        0.16896055, 0.13146321, 0.14712352, 0.19235722, 0.17305971,\n",
       "        0.1434639 , 0.18124477, 0.14832825, 0.13895742, 0.13905051,\n",
       "        0.14691237, 0.16868988, 0.20231186, 0.1549879 , 0.11553828,\n",
       "        0.15199764, 0.15774815, 0.12946875, 0.18914886, 0.18050057,\n",
       "        0.13394026, 0.15200051, 0.22755663, 0.18416182, 0.15913849,\n",
       "        0.1937501 , 0.13325416, 0.14418576, 0.12164885, 0.12909503],\n",
       "       [1.        , 0.4725428 , 0.86026378, 0.31841227, 0.30656092,\n",
       "        0.5046992 , 0.35579937, 0.27721354, 0.31132849, 0.24438461,\n",
       "        0.20568831, 0.265825  , 0.27959956, 0.21353026, 0.28227596,\n",
       "        0.29691184, 0.21719077, 0.17048555, 0.26068345, 0.28355468,\n",
       "        0.13546725, 0.26628379, 0.26886974, 0.13320401, 0.22055672,\n",
       "        0.30613872, 0.20912055, 0.22313544, 0.14438959, 0.21393119,\n",
       "        0.19523732, 0.21176474, 0.1809591 , 0.11882266, 0.17130671,\n",
       "        0.24561041, 0.15762216, 0.19425353, 0.22936877, 0.17859141,\n",
       "        0.21624498, 0.17920936, 0.19786953, 0.18077605, 0.14587059,\n",
       "        0.1584206 , 0.14176374, 0.20191255, 0.1934055 , 0.20175518,\n",
       "        0.17003686, 0.19294618, 0.18688127, 0.18395422, 0.23585188,\n",
       "        0.18649781, 0.19844693, 0.12137868, 0.1625385 , 0.1561457 ,\n",
       "        0.18702063, 0.22360682, 0.17348024, 0.14570294, 0.13731879,\n",
       "        0.16913328, 0.15112759, 0.17478533, 0.12937008, 0.22281651,\n",
       "        0.19871427, 0.14565477, 0.12785671, 0.15962508, 0.15624336,\n",
       "        0.20374069, 0.19434711, 0.19308145, 0.14663413, 0.18203298,\n",
       "        0.18212994, 0.13238372, 0.14844672, 0.18914781, 0.12475717,\n",
       "        0.15792344, 0.15261451, 0.21745857, 0.18982559, 0.1375975 ,\n",
       "        0.16816046, 0.15318611, 0.16425936, 0.16692356, 0.17487525,\n",
       "        0.13320466, 0.10375417, 0.19432159, 0.14466716, 0.14663451],\n",
       "       [1.        , 1.        , 1.        , 0.25467768, 0.30615089,\n",
       "        0.28682185, 0.210514  , 0.23639204, 0.22909045, 0.14974841,\n",
       "        0.23181959, 0.2162171 , 0.22493794, 0.17395789, 0.16994256,\n",
       "        0.14108659, 0.17144682, 0.15291112, 0.18812705, 0.19261166,\n",
       "        0.15294417, 0.20081185, 0.17403743, 0.14188797, 0.14029457,\n",
       "        0.20878004, 0.1498615 , 0.23140588, 0.15138763, 0.19688002,\n",
       "        0.15563505, 0.22460045, 0.16088157, 0.11458852, 0.15743752,\n",
       "        0.18422424, 0.18077943, 0.13253968, 0.13103835, 0.2650345 ,\n",
       "        0.14466515, 0.16156348, 0.14684308, 0.13099882, 0.11209778,\n",
       "        0.14867376, 0.17232442, 0.15861495, 0.13443697, 0.14879161,\n",
       "        0.13167521, 0.1573873 , 0.20466074, 0.15072476, 0.1538882 ,\n",
       "        0.12873212, 0.17456519, 0.13683023, 0.10827829, 0.12627545,\n",
       "        0.12211877, 0.1803262 , 0.11003242, 0.11621435, 0.11592379,\n",
       "        0.12854458, 0.10710943, 0.16274546, 0.13161418, 0.13266486,\n",
       "        0.16921638, 0.11593646, 0.20877388, 0.17774065, 0.14592792,\n",
       "        1.        , 1.        , 0.14607917, 0.13817897, 0.10902695,\n",
       "        0.11161052, 0.12830174, 0.12186842, 0.13138774, 0.12057802,\n",
       "        0.13397354, 0.10249957, 0.11056683, 0.09091598, 0.10796222,\n",
       "        0.12808869, 0.13607554, 0.12749933, 0.1706499 , 0.10937205,\n",
       "        0.1188328 , 0.12842263, 0.12873441, 0.12020172, 0.1840384 ],\n",
       "       [1.        , 1.        , 0.58382094, 0.46705337, 0.73278582,\n",
       "        0.50729648, 0.3151238 , 0.2403894 , 0.19926203, 0.20003794,\n",
       "        0.27252849, 0.13553953, 0.13153992, 0.17033533, 0.13700719,\n",
       "        0.1300577 , 0.23381777, 0.17746628, 0.11016727, 0.1768013 ,\n",
       "        0.13206692, 0.12458191, 0.09838064, 0.12433057, 0.15347942,\n",
       "        0.18264879, 0.10820185, 0.11725142, 0.12565204, 0.14078504,\n",
       "        0.16672733, 0.16397646, 0.12630993, 0.20383689, 0.15598682,\n",
       "        0.21218245, 0.19758761, 0.15859515, 0.16630213, 0.14447501,\n",
       "        0.1186571 , 0.16031442, 0.17604869, 0.10532207, 0.24925113,\n",
       "        0.26577361, 0.1575674 , 0.15352576, 0.11889025, 0.12997321,\n",
       "        0.17952143, 0.16414227, 0.17394133, 0.13932002, 0.16789294,\n",
       "        0.14486889, 0.14007426, 0.23670094, 0.17079322, 0.1304332 ,\n",
       "        0.14686783, 0.13706843, 0.10761264, 0.14250856, 0.1648794 ,\n",
       "        0.12167221, 0.15860965, 0.15025823, 0.09730542, 0.13894851,\n",
       "        0.10560638, 0.15816785, 0.11707824, 0.17907947, 0.1287668 ,\n",
       "        0.15181202, 0.15732947, 0.15514642, 0.14008731, 0.12224504,\n",
       "        0.12607879, 0.1189182 , 0.1066338 , 0.14166379, 0.17389161,\n",
       "        0.16954301, 0.15276968, 0.1003656 , 0.12001102, 0.08915258,\n",
       "        0.12722132, 0.09978662, 0.18622567, 0.17336598, 0.08818686,\n",
       "        0.12300447, 0.09780061, 0.12918897, 0.10706023, 0.09885576]])"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x, y, z = get_data('pso_18', \"num_hidden_layers\", \"num_particles\")\n",
    "\n",
    "plot_heatmap(z, x_range = (1,5,5, \"num_hidden_layers\"), y_range = (1,100,100, \"num_particles\"), square = False, grid_space = 5, cmap_lims = (0, 0.4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y, z = get_data('pso_19',\"num_particles\", \"omega\")\n",
    "\n",
    "z_array = plot_heatmap(z, x_range = (40,100,31, \"num_particles\"), y_range = (0,1,21, \"omega\"), cmap_lims = (0, 0.3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x11fa4f2d0>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "omega_range = np.linspace(0, 1, 21)\n",
    "\n",
    "plt.figure(figsize = [10, 4])\n",
    "plt.plot(omega_range, z_array[10, :], 'x', label = \"no. particles = \"+str(np.unique(np.array(x))[10]))\n",
    "plt.plot(omega_range, z_array[15, :], 'x', label = \"no. particles = \"+str(np.unique(np.array(x))[15]))\n",
    "plt.plot(omega_range, z_array[20, :], 'x', label = \"no. particles = \"+str(np.unique(np.array(x))[20]))\n",
    "plt.xlabel(\"Omega, $\\omega$\")\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y, z = get_data('pso_20',\"c_2\", \"omega\")\n",
    "# print(x, y, z)\n",
    "\n",
    "z_array = plot_heatmap(z, x_range = (0, 5, 21, \"$c_2$\"), y_range = (0,1,21, \"omega\"), cmap_lims = (0, 0.4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x129123610>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "c2_range = np.linspace(0, 5, 21)\n",
    "\n",
    "plt.figure(figsize = [10, 4])\n",
    "plt.plot(c2_range, z_array[:, 8], 'x', label = \"$\\omega$ = \"+str(np.unique(np.array(y))[8]))\n",
    "plt.plot(c2_range, z_array[:, 10], 'x', label = \"$\\omega$ = \"+str(np.unique(np.array(y))[10]))\n",
    "plt.plot(c2_range, z_array[:, 12], 'x', label = \"$\\omega$ = \"+str(np.unique(np.array(y))[12]))\n",
    "plt.xlabel(\"$c_2$\")\n",
    "plt.ylim(0, 0.4)\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[0.15917516, 0.12734551, 0.14630423, 0.14257362, 0.14035727,\n",
       "        0.13652579, 0.12286972, 0.1084152 , 0.11643244, 0.09597123,\n",
       "        0.0924507 , 0.11361268, 0.11108181, 0.08945959, 0.08644075,\n",
       "        0.09679051, 0.11603767, 0.10957212, 0.18409303, 0.16768236,\n",
       "        0.24853851],\n",
       "       [0.12182871, 0.1559765 , 0.14495697, 0.1601435 , 0.11314328,\n",
       "        0.09874319, 0.12130426, 0.09698216, 0.11477854, 0.09222409,\n",
       "        0.10183744, 0.06293014, 0.08214638, 0.05498616, 0.08825272,\n",
       "        0.06289268, 0.09086467, 0.13156778, 0.13529288, 0.19319598,\n",
       "        0.22269616],\n",
       "       [0.14009922, 0.15747018, 0.14391607, 0.14352478, 0.12890816,\n",
       "        0.108028  , 0.09684804, 0.11633628, 0.11761821, 0.13963076,\n",
       "        0.12403056, 0.09129274, 0.09622562, 0.07039268, 0.09226705,\n",
       "        0.07919552, 0.11508389, 0.13593252, 0.17737155, 0.16345453,\n",
       "        0.16662967],\n",
       "       [0.2896591 , 0.21338109, 1.        , 1.        , 0.12536046,\n",
       "        1.        , 1.        , 1.        , 1.        , 1.        ,\n",
       "        1.        , 0.09826728, 0.0781489 , 0.07480102, 0.07576515,\n",
       "        0.09928332, 0.15385129, 0.15050104, 1.        , 1.        ,\n",
       "        0.2823897 ],\n",
       "       [0.13287553, 0.11203698, 0.09184908, 0.09159051, 0.08914197,\n",
       "        0.10156378, 0.09306462, 0.08893078, 0.07733793, 0.06377527,\n",
       "        0.09530588, 0.084552  , 0.07852536, 0.10241127, 0.07901757,\n",
       "        0.10999984, 0.11876514, 0.09125442, 0.10036643, 0.16991012,\n",
       "        0.21448073],\n",
       "       [0.18992446, 0.15675478, 0.17552847, 0.17528741, 0.16779278,\n",
       "        0.13923125, 0.12230367, 0.10314414, 0.12074372, 0.1236475 ,\n",
       "        0.14438638, 0.09936697, 0.07236992, 0.0694319 , 0.07480096,\n",
       "        0.07380023, 0.1156625 , 0.14893907, 0.17610303, 0.21306787,\n",
       "        0.27514173],\n",
       "       [0.16703855, 0.1260151 , 0.15461767, 0.16555386, 0.16976742,\n",
       "        0.11577317, 0.12000257, 0.10702926, 0.13767886, 0.10010714,\n",
       "        0.08552673, 0.10027828, 0.08258467, 0.07529655, 0.07649727,\n",
       "        0.0758273 , 0.08567931, 0.19264002, 0.18953148, 0.14529194,\n",
       "        0.27051388],\n",
       "       [0.15766781, 0.13024873, 0.14506127, 0.12425464, 0.10980739,\n",
       "        0.12423376, 0.1150876 , 0.06943213, 0.08278722, 0.05419178,\n",
       "        0.08552069, 0.04237373, 0.10541095, 0.09393526, 0.09486707,\n",
       "        0.08577465, 0.05433461, 0.06857011, 0.07341931, 0.09141562,\n",
       "        0.11130604],\n",
       "       [0.13863779, 0.14587483, 0.15356513, 0.13178444, 0.11210407,\n",
       "        0.07599902, 0.08394866, 0.11284687, 0.15063668, 0.09399373,\n",
       "        0.08025749, 0.07733466, 0.1182056 , 0.10537694, 0.093819  ,\n",
       "        0.11981368, 0.11201342, 0.1014685 , 0.18781361, 0.20941747,\n",
       "        0.25220086],\n",
       "       [0.11862163, 0.11744169, 0.10029819, 0.09448833, 0.13991864,\n",
       "        0.08097227, 0.10144615, 0.10277474, 0.10542327, 0.08130603,\n",
       "        0.072888  , 0.08770193, 0.05413403, 0.09784731, 0.06434495,\n",
       "        0.04345506, 0.07965096, 0.08496717, 0.13625687, 0.15785209,\n",
       "        0.15250963],\n",
       "       [0.13529269, 0.14407995, 0.16941397, 0.14160862, 0.1945661 ,\n",
       "        0.13024055, 0.14108655, 0.10768826, 0.12369717, 0.1037408 ,\n",
       "        0.14034624, 0.13824643, 0.10427041, 0.10917859, 0.15124684,\n",
       "        0.10288194, 0.08480115, 0.11341765, 0.12997321, 0.155742  ,\n",
       "        0.19670582]])"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x, y, z = get_data('pso_21',\"num_per_layer\", \"omega\")\n",
    "# print(x, y, z)\n",
    "\n",
    "plot_heatmap(z, x_range = (10, 20, 11, \"num_per_layer\"), y_range = (0,1,21, \"omega\"), square = False, cmap_lims = (0, 0.3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
